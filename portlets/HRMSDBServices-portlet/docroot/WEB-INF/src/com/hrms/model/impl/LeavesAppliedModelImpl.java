/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.hrms.model.impl;

import com.hrms.model.LeavesApplied;
import com.hrms.model.LeavesAppliedModel;
import com.hrms.model.LeavesAppliedSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LeavesApplied service. Represents a row in the &quot;HRMS_LeavesApplied&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.hrms.model.LeavesAppliedModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LeavesAppliedImpl}.
 * </p>
 *
 * @author bhavik
 * @see LeavesAppliedImpl
 * @see com.hrms.model.LeavesApplied
 * @see com.hrms.model.LeavesAppliedModel
 * @generated
 */
@JSON(strict = true)
public class LeavesAppliedModelImpl extends BaseModelImpl<LeavesApplied>
	implements LeavesAppliedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a leaves applied model instance should use the {@link com.hrms.model.LeavesApplied} interface instead.
	 */
	public static final String TABLE_NAME = "HRMS_LeavesApplied";
	public static final Object[][] TABLE_COLUMNS = {
			{ "appliedLeaveId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "employeeName", Types.VARCHAR },
			{ "leaveName", Types.VARCHAR },
			{ "entitlement", Types.VARCHAR },
			{ "leaveDuration", Types.VARCHAR },
			{ "leaveFrom", Types.TIMESTAMP },
			{ "leaveTo", Types.TIMESTAMP },
			{ "leaveDate", Types.TIMESTAMP },
			{ "leavePeriod", Types.VARCHAR },
			{ "approvalStatus", Types.VARCHAR },
			{ "leaveId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "createBy", Types.BIGINT },
			{ "modifiedBy", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table HRMS_LeavesApplied (appliedLeaveId LONG not null primary key,userId LONG,groupId LONG,companyId LONG,employeeName VARCHAR(75) null,leaveName VARCHAR(75) null,entitlement VARCHAR(75) null,leaveDuration VARCHAR(75) null,leaveFrom DATE null,leaveTo DATE null,leaveDate DATE null,leavePeriod VARCHAR(75) null,approvalStatus VARCHAR(75) null,leaveId LONG,createDate DATE null,modifiedDate DATE null,createBy LONG,modifiedBy LONG)";
	public static final String TABLE_SQL_DROP = "drop table HRMS_LeavesApplied";
	public static final String ORDER_BY_JPQL = " ORDER BY leavesApplied.appliedLeaveId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY HRMS_LeavesApplied.appliedLeaveId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.hrms.model.LeavesApplied"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.hrms.model.LeavesApplied"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LeavesApplied toModel(LeavesAppliedSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LeavesApplied model = new LeavesAppliedImpl();

		model.setAppliedLeaveId(soapModel.getAppliedLeaveId());
		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setEmployeeName(soapModel.getEmployeeName());
		model.setLeaveName(soapModel.getLeaveName());
		model.setEntitlement(soapModel.getEntitlement());
		model.setLeaveDuration(soapModel.getLeaveDuration());
		model.setLeaveFrom(soapModel.getLeaveFrom());
		model.setLeaveTo(soapModel.getLeaveTo());
		model.setLeaveDate(soapModel.getLeaveDate());
		model.setLeavePeriod(soapModel.getLeavePeriod());
		model.setApprovalStatus(soapModel.getApprovalStatus());
		model.setLeaveId(soapModel.getLeaveId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCreateBy(soapModel.getCreateBy());
		model.setModifiedBy(soapModel.getModifiedBy());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LeavesApplied> toModels(LeavesAppliedSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LeavesApplied> models = new ArrayList<LeavesApplied>(soapModels.length);

		for (LeavesAppliedSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.hrms.model.LeavesApplied"));

	public LeavesAppliedModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _appliedLeaveId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAppliedLeaveId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _appliedLeaveId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LeavesApplied.class;
	}

	@Override
	public String getModelClassName() {
		return LeavesApplied.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("appliedLeaveId", getAppliedLeaveId());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("employeeName", getEmployeeName());
		attributes.put("leaveName", getLeaveName());
		attributes.put("entitlement", getEntitlement());
		attributes.put("leaveDuration", getLeaveDuration());
		attributes.put("leaveFrom", getLeaveFrom());
		attributes.put("leaveTo", getLeaveTo());
		attributes.put("leaveDate", getLeaveDate());
		attributes.put("leavePeriod", getLeavePeriod());
		attributes.put("approvalStatus", getApprovalStatus());
		attributes.put("leaveId", getLeaveId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("createBy", getCreateBy());
		attributes.put("modifiedBy", getModifiedBy());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long appliedLeaveId = (Long)attributes.get("appliedLeaveId");

		if (appliedLeaveId != null) {
			setAppliedLeaveId(appliedLeaveId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String employeeName = (String)attributes.get("employeeName");

		if (employeeName != null) {
			setEmployeeName(employeeName);
		}

		String leaveName = (String)attributes.get("leaveName");

		if (leaveName != null) {
			setLeaveName(leaveName);
		}

		String entitlement = (String)attributes.get("entitlement");

		if (entitlement != null) {
			setEntitlement(entitlement);
		}

		String leaveDuration = (String)attributes.get("leaveDuration");

		if (leaveDuration != null) {
			setLeaveDuration(leaveDuration);
		}

		Date leaveFrom = (Date)attributes.get("leaveFrom");

		if (leaveFrom != null) {
			setLeaveFrom(leaveFrom);
		}

		Date leaveTo = (Date)attributes.get("leaveTo");

		if (leaveTo != null) {
			setLeaveTo(leaveTo);
		}

		Date leaveDate = (Date)attributes.get("leaveDate");

		if (leaveDate != null) {
			setLeaveDate(leaveDate);
		}

		String leavePeriod = (String)attributes.get("leavePeriod");

		if (leavePeriod != null) {
			setLeavePeriod(leavePeriod);
		}

		String approvalStatus = (String)attributes.get("approvalStatus");

		if (approvalStatus != null) {
			setApprovalStatus(approvalStatus);
		}

		Long leaveId = (Long)attributes.get("leaveId");

		if (leaveId != null) {
			setLeaveId(leaveId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long createBy = (Long)attributes.get("createBy");

		if (createBy != null) {
			setCreateBy(createBy);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}
	}

	@JSON
	@Override
	public long getAppliedLeaveId() {
		return _appliedLeaveId;
	}

	@Override
	public void setAppliedLeaveId(long appliedLeaveId) {
		_appliedLeaveId = appliedLeaveId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public String getEmployeeName() {
		if (_employeeName == null) {
			return StringPool.BLANK;
		}
		else {
			return _employeeName;
		}
	}

	@Override
	public void setEmployeeName(String employeeName) {
		_employeeName = employeeName;
	}

	@JSON
	@Override
	public String getLeaveName() {
		if (_leaveName == null) {
			return StringPool.BLANK;
		}
		else {
			return _leaveName;
		}
	}

	@Override
	public void setLeaveName(String leaveName) {
		_leaveName = leaveName;
	}

	@JSON
	@Override
	public String getEntitlement() {
		if (_entitlement == null) {
			return StringPool.BLANK;
		}
		else {
			return _entitlement;
		}
	}

	@Override
	public void setEntitlement(String entitlement) {
		_entitlement = entitlement;
	}

	@JSON
	@Override
	public String getLeaveDuration() {
		if (_leaveDuration == null) {
			return StringPool.BLANK;
		}
		else {
			return _leaveDuration;
		}
	}

	@Override
	public void setLeaveDuration(String leaveDuration) {
		_leaveDuration = leaveDuration;
	}

	@JSON
	@Override
	public Date getLeaveFrom() {
		return _leaveFrom;
	}

	@Override
	public void setLeaveFrom(Date leaveFrom) {
		_leaveFrom = leaveFrom;
	}

	@JSON
	@Override
	public Date getLeaveTo() {
		return _leaveTo;
	}

	@Override
	public void setLeaveTo(Date leaveTo) {
		_leaveTo = leaveTo;
	}

	@JSON
	@Override
	public Date getLeaveDate() {
		return _leaveDate;
	}

	@Override
	public void setLeaveDate(Date leaveDate) {
		_leaveDate = leaveDate;
	}

	@JSON
	@Override
	public String getLeavePeriod() {
		if (_leavePeriod == null) {
			return StringPool.BLANK;
		}
		else {
			return _leavePeriod;
		}
	}

	@Override
	public void setLeavePeriod(String leavePeriod) {
		_leavePeriod = leavePeriod;
	}

	@JSON
	@Override
	public String getApprovalStatus() {
		if (_approvalStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _approvalStatus;
		}
	}

	@Override
	public void setApprovalStatus(String approvalStatus) {
		_approvalStatus = approvalStatus;
	}

	@JSON
	@Override
	public long getLeaveId() {
		return _leaveId;
	}

	@Override
	public void setLeaveId(long leaveId) {
		_leaveId = leaveId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCreateBy() {
		return _createBy;
	}

	@Override
	public void setCreateBy(long createBy) {
		_createBy = createBy;
	}

	@JSON
	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			LeavesApplied.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LeavesApplied toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LeavesApplied)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LeavesAppliedImpl leavesAppliedImpl = new LeavesAppliedImpl();

		leavesAppliedImpl.setAppliedLeaveId(getAppliedLeaveId());
		leavesAppliedImpl.setUserId(getUserId());
		leavesAppliedImpl.setGroupId(getGroupId());
		leavesAppliedImpl.setCompanyId(getCompanyId());
		leavesAppliedImpl.setEmployeeName(getEmployeeName());
		leavesAppliedImpl.setLeaveName(getLeaveName());
		leavesAppliedImpl.setEntitlement(getEntitlement());
		leavesAppliedImpl.setLeaveDuration(getLeaveDuration());
		leavesAppliedImpl.setLeaveFrom(getLeaveFrom());
		leavesAppliedImpl.setLeaveTo(getLeaveTo());
		leavesAppliedImpl.setLeaveDate(getLeaveDate());
		leavesAppliedImpl.setLeavePeriod(getLeavePeriod());
		leavesAppliedImpl.setApprovalStatus(getApprovalStatus());
		leavesAppliedImpl.setLeaveId(getLeaveId());
		leavesAppliedImpl.setCreateDate(getCreateDate());
		leavesAppliedImpl.setModifiedDate(getModifiedDate());
		leavesAppliedImpl.setCreateBy(getCreateBy());
		leavesAppliedImpl.setModifiedBy(getModifiedBy());

		leavesAppliedImpl.resetOriginalValues();

		return leavesAppliedImpl;
	}

	@Override
	public int compareTo(LeavesApplied leavesApplied) {
		long primaryKey = leavesApplied.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LeavesApplied)) {
			return false;
		}

		LeavesApplied leavesApplied = (LeavesApplied)obj;

		long primaryKey = leavesApplied.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<LeavesApplied> toCacheModel() {
		LeavesAppliedCacheModel leavesAppliedCacheModel = new LeavesAppliedCacheModel();

		leavesAppliedCacheModel.appliedLeaveId = getAppliedLeaveId();

		leavesAppliedCacheModel.userId = getUserId();

		leavesAppliedCacheModel.groupId = getGroupId();

		leavesAppliedCacheModel.companyId = getCompanyId();

		leavesAppliedCacheModel.employeeName = getEmployeeName();

		String employeeName = leavesAppliedCacheModel.employeeName;

		if ((employeeName != null) && (employeeName.length() == 0)) {
			leavesAppliedCacheModel.employeeName = null;
		}

		leavesAppliedCacheModel.leaveName = getLeaveName();

		String leaveName = leavesAppliedCacheModel.leaveName;

		if ((leaveName != null) && (leaveName.length() == 0)) {
			leavesAppliedCacheModel.leaveName = null;
		}

		leavesAppliedCacheModel.entitlement = getEntitlement();

		String entitlement = leavesAppliedCacheModel.entitlement;

		if ((entitlement != null) && (entitlement.length() == 0)) {
			leavesAppliedCacheModel.entitlement = null;
		}

		leavesAppliedCacheModel.leaveDuration = getLeaveDuration();

		String leaveDuration = leavesAppliedCacheModel.leaveDuration;

		if ((leaveDuration != null) && (leaveDuration.length() == 0)) {
			leavesAppliedCacheModel.leaveDuration = null;
		}

		Date leaveFrom = getLeaveFrom();

		if (leaveFrom != null) {
			leavesAppliedCacheModel.leaveFrom = leaveFrom.getTime();
		}
		else {
			leavesAppliedCacheModel.leaveFrom = Long.MIN_VALUE;
		}

		Date leaveTo = getLeaveTo();

		if (leaveTo != null) {
			leavesAppliedCacheModel.leaveTo = leaveTo.getTime();
		}
		else {
			leavesAppliedCacheModel.leaveTo = Long.MIN_VALUE;
		}

		Date leaveDate = getLeaveDate();

		if (leaveDate != null) {
			leavesAppliedCacheModel.leaveDate = leaveDate.getTime();
		}
		else {
			leavesAppliedCacheModel.leaveDate = Long.MIN_VALUE;
		}

		leavesAppliedCacheModel.leavePeriod = getLeavePeriod();

		String leavePeriod = leavesAppliedCacheModel.leavePeriod;

		if ((leavePeriod != null) && (leavePeriod.length() == 0)) {
			leavesAppliedCacheModel.leavePeriod = null;
		}

		leavesAppliedCacheModel.approvalStatus = getApprovalStatus();

		String approvalStatus = leavesAppliedCacheModel.approvalStatus;

		if ((approvalStatus != null) && (approvalStatus.length() == 0)) {
			leavesAppliedCacheModel.approvalStatus = null;
		}

		leavesAppliedCacheModel.leaveId = getLeaveId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			leavesAppliedCacheModel.createDate = createDate.getTime();
		}
		else {
			leavesAppliedCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			leavesAppliedCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			leavesAppliedCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		leavesAppliedCacheModel.createBy = getCreateBy();

		leavesAppliedCacheModel.modifiedBy = getModifiedBy();

		return leavesAppliedCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{appliedLeaveId=");
		sb.append(getAppliedLeaveId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", employeeName=");
		sb.append(getEmployeeName());
		sb.append(", leaveName=");
		sb.append(getLeaveName());
		sb.append(", entitlement=");
		sb.append(getEntitlement());
		sb.append(", leaveDuration=");
		sb.append(getLeaveDuration());
		sb.append(", leaveFrom=");
		sb.append(getLeaveFrom());
		sb.append(", leaveTo=");
		sb.append(getLeaveTo());
		sb.append(", leaveDate=");
		sb.append(getLeaveDate());
		sb.append(", leavePeriod=");
		sb.append(getLeavePeriod());
		sb.append(", approvalStatus=");
		sb.append(getApprovalStatus());
		sb.append(", leaveId=");
		sb.append(getLeaveId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", createBy=");
		sb.append(getCreateBy());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append("com.hrms.model.LeavesApplied");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>appliedLeaveId</column-name><column-value><![CDATA[");
		sb.append(getAppliedLeaveId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeName</column-name><column-value><![CDATA[");
		sb.append(getEmployeeName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>leaveName</column-name><column-value><![CDATA[");
		sb.append(getLeaveName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entitlement</column-name><column-value><![CDATA[");
		sb.append(getEntitlement());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>leaveDuration</column-name><column-value><![CDATA[");
		sb.append(getLeaveDuration());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>leaveFrom</column-name><column-value><![CDATA[");
		sb.append(getLeaveFrom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>leaveTo</column-name><column-value><![CDATA[");
		sb.append(getLeaveTo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>leaveDate</column-name><column-value><![CDATA[");
		sb.append(getLeaveDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>leavePeriod</column-name><column-value><![CDATA[");
		sb.append(getLeavePeriod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvalStatus</column-name><column-value><![CDATA[");
		sb.append(getApprovalStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>leaveId</column-name><column-value><![CDATA[");
		sb.append(getLeaveId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createBy</column-name><column-value><![CDATA[");
		sb.append(getCreateBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LeavesApplied.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LeavesApplied.class
		};
	private long _appliedLeaveId;
	private long _userId;
	private String _userUuid;
	private long _groupId;
	private long _companyId;
	private String _employeeName;
	private String _leaveName;
	private String _entitlement;
	private String _leaveDuration;
	private Date _leaveFrom;
	private Date _leaveTo;
	private Date _leaveDate;
	private String _leavePeriod;
	private String _approvalStatus;
	private long _leaveId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _createBy;
	private long _modifiedBy;
	private LeavesApplied _escapedModel;
}