/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.hrms.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Interview service. Represents a row in the &quot;HRMS_Interview&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.hrms.model.impl.InterviewModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.hrms.model.impl.InterviewImpl}.
 * </p>
 *
 * @author yashpalsinh
 * @see Interview
 * @see com.hrms.model.impl.InterviewImpl
 * @see com.hrms.model.impl.InterviewModelImpl
 * @generated
 */
public interface InterviewModel extends BaseModel<Interview> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a interview model instance should use the {@link Interview} interface instead.
	 */

	/**
	 * Returns the primary key of this interview.
	 *
	 * @return the primary key of this interview
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this interview.
	 *
	 * @param primaryKey the primary key of this interview
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the interview ID of this interview.
	 *
	 * @return the interview ID of this interview
	 */
	public long getInterviewId();

	/**
	 * Sets the interview ID of this interview.
	 *
	 * @param InterviewId the interview ID of this interview
	 */
	public void setInterviewId(long InterviewId);

	/**
	 * Returns the candidate ID of this interview.
	 *
	 * @return the candidate ID of this interview
	 */
	public long getCandidateId();

	/**
	 * Sets the candidate ID of this interview.
	 *
	 * @param candidateId the candidate ID of this interview
	 */
	public void setCandidateId(long candidateId);

	/**
	 * Returns the job library ID of this interview.
	 *
	 * @return the job library ID of this interview
	 */
	public long getJobLibraryId();

	/**
	 * Sets the job library ID of this interview.
	 *
	 * @param jobLibraryId the job library ID of this interview
	 */
	public void setJobLibraryId(long jobLibraryId);

	/**
	 * Returns the round number of this interview.
	 *
	 * @return the round number of this interview
	 */
	public long getRoundNumber();

	/**
	 * Sets the round number of this interview.
	 *
	 * @param roundNumber the round number of this interview
	 */
	public void setRoundNumber(long roundNumber);

	/**
	 * Returns the round type of this interview.
	 *
	 * @return the round type of this interview
	 */
	@AutoEscape
	public String getRoundType();

	/**
	 * Sets the round type of this interview.
	 *
	 * @param roundType the round type of this interview
	 */
	public void setRoundType(String roundType);

	/**
	 * Returns the interviewer ID of this interview.
	 *
	 * @return the interviewer ID of this interview
	 */
	public long getInterviewerId();

	/**
	 * Sets the interviewer ID of this interview.
	 *
	 * @param InterviewerId the interviewer ID of this interview
	 */
	public void setInterviewerId(long InterviewerId);

	/**
	 * Returns the interview date of this interview.
	 *
	 * @return the interview date of this interview
	 */
	public Date getInterviewDate();

	/**
	 * Sets the interview date of this interview.
	 *
	 * @param interviewDate the interview date of this interview
	 */
	public void setInterviewDate(Date interviewDate);

	/**
	 * Returns the result of this interview.
	 *
	 * @return the result of this interview
	 */
	public boolean getResult();

	/**
	 * Returns <code>true</code> if this interview is result.
	 *
	 * @return <code>true</code> if this interview is result; <code>false</code> otherwise
	 */
	public boolean isResult();

	/**
	 * Sets whether this interview is result.
	 *
	 * @param result the result of this interview
	 */
	public void setResult(boolean result);

	/**
	 * Returns the remarks of this interview.
	 *
	 * @return the remarks of this interview
	 */
	@AutoEscape
	public String getRemarks();

	/**
	 * Sets the remarks of this interview.
	 *
	 * @param remarks the remarks of this interview
	 */
	public void setRemarks(String remarks);

	/**
	 * Returns the create date of this interview.
	 *
	 * @return the create date of this interview
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this interview.
	 *
	 * @param createDate the create date of this interview
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this interview.
	 *
	 * @return the modified date of this interview
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this interview.
	 *
	 * @param modifiedDate the modified date of this interview
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the create by of this interview.
	 *
	 * @return the create by of this interview
	 */
	public long getCreateBy();

	/**
	 * Sets the create by of this interview.
	 *
	 * @param createBy the create by of this interview
	 */
	public void setCreateBy(long createBy);

	/**
	 * Returns the modified by of this interview.
	 *
	 * @return the modified by of this interview
	 */
	public long getModifiedBy();

	/**
	 * Sets the modified by of this interview.
	 *
	 * @param modifiedBy the modified by of this interview
	 */
	public void setModifiedBy(long modifiedBy);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Interview interview);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Interview> toCacheModel();

	@Override
	public Interview toEscapedModel();

	@Override
	public Interview toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}